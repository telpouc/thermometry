apply plugin: 'com.android.library'
//apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'

group = library_group
version = library_version

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 2
        versionName version

        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
}

dependencies {
    compileOnly 'androidx.annotation:annotation:1.0.2'
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // testImplementation 'junit:junit:4.12'
    // androidTestImplementation 'com.android.support.test:runner:1.0.2'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/8/docs/api"
    }
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives(file("$buildDir/intermediates/packaged-classes/release/classes.jar")) {
        name = project.name
    }
    archives javadocJar
    archives sourcesJar
}
